{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./src/pages/technology/decision/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","name","_frontmatter","InlineNotification","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","kind","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-technology-decision-index-mdx-7dc58c5fda2f5a0a0b89.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/refarch-dba/refarch-dba/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <strong>Updated 10/22/2020</strong> - Work in progress\n    </InlineNotification>\n    <h2>{`Introduction`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/automation/business-rules\"\n      }}>{`Decision management`}</a>{` supports three main use cases:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Let users model, author and validate decisions in a low-code environment.`}</li>\n      <li parentName=\"ul\">{`Externalize decision logic from microservice code so it can be developed, managed and tested by business users, but still integrated as a service in a cloud native microservice based.`}</li>\n      <li parentName=\"ul\">{`Integrate with AI model for combining predictive scoring and business rules `}</li>\n    </ul>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_20.0.x/com.ibm.dba.aid/topics/con_aid_intro.html\"\n      }}>{`product documentation`}</a></p>\n    <h2>{`Getting started`}</h2>\n    <h3>{`Installing on IBM Cloud Openshift cluster`}</h3>\n    <p>{`This section is a quick summary of the steps to do to deploy version 2020.2.`}</p>\n    <h5>{`Pre-requisites`}</h5>\n    <p>{`Access to an Opendhift cluster and get `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` CLI.`}</p>\n    <h5>{`Get access to the container images`}</h5>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Get your product entitlement key at `}<a parentName=\"p\" {...{\n            \"href\": \"https://myibm.ibm.com/products-services/containerlibrary\"\n          }}>{`https://myibm.ibm.com/products-services/containerlibrary`}</a>{` site.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If not done already create an openShift project to host the decision service`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`oc -new-project cp4automation\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Create an image pull secret to access the IBM image registry `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`oc create secret docker-registry admin.registrykey --docker-username=cp --docker-password=<Generated-Key> --docker-server=cp.icr.io -n cp4automation\n> secret/admin.registrykey created\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Check that you can access and download the Cloud Pak for Automation images: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`docker login cp.icr.io -u cp -p <Generated-Key>\ndocker pull cp.icr.io/cp/cp4a/aae/dba-dbcompatibility-initcontainer:20.0.2\n`}</code></pre>\n      </li>\n    </ul>\n    <h5>{`Install common services`}</h5>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Get scripts and config files archive from IBM github cloud pak for automation: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`wget https://github.com/icp4a/cert-kubernetes/archive/20.0.2.1.tar.gz\n`}</code></pre>\n      </li>\n    </ul>\n    <p><em parentName=\"p\">{`Those scripts define custom resource definitions for kubernetes deployment.`}</em></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Expand archive: `}<inlineCode parentName=\"p\">{`tar xvf 20.0.2.tar.gz`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Change to folder cert-kubernetes-20.0.2`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If not already present on the cluster create the `}<inlineCode parentName=\"p\">{`common-service`}</inlineCode>{` OpenShift project`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`# verify project does not exist\noc new-project common-service\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`In common-service project, run the following script to install the different operators. If you do want to set the trace of the execution, you can uncomment the second line `}<inlineCode parentName=\"p\">{`set -x`}</inlineCode>{` in this script.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`./scripts/deploy_CS3.4.sh nonbai\n`}</code></pre>\n      </li>\n    </ul>\n    <h5>{`Prepare the operator storage`}</h5>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Edit `}<inlineCode parentName=\"p\">{`descriptors/operator-shared-pvc.yaml`}</inlineCode>{` and use ibmc-file-retain-gold-gid`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Create the PVC: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`oc create -f descriptors/operator-shared-pvc.yaml\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Copy the drivers: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc cp scripts/jdbc cp4a/<operator-podname>:/opt/ansible/share -c ansible\n`}</code></pre>\n      </li>\n    </ul>\n    <h5>{`Install the operator`}</h5>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deploy operator: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`./scripts/deployOperator.sh -i cp.icr.io/cp/cp4a/icp4a-operator:20.0.2 -p admin.registrykey -n cp4a -a accept\\`\n`}</code></pre>\n      </li>\n    </ul>\n    <h5>{`Deploy ODM`}</h5>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Apply the CR:   (note: this CR also includes a simple install of BAI)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Update the network policies for ODM: `}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc get netpol\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Edit the odm-dc-networkpolicy, odm-dr-network-policy, odm-ds-console-network-policy, odm-ds-runtime-network-policy to add a blanket egress policy, for example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{` spec:\n egress:\n - {}\n ingress:\n - ports:\n   - port: <PORT>\n     protocol: TCP\n podSelector:\n   matchLabels:\n     run: ppe-odm-decisioncenter\n policyTypes:\n - Egress\n - Ingress\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}