{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./src/pages/technology/decision/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","name","_frontmatter","InlineNotification","console","warn","MDXLayout","DefaultLayout","MDXContent","components","mdxType","kind","isMDXComponent"],"mappings":"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","file":"component---src-pages-technology-decision-index-mdx-8d547b2e7279af080bc7.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/refarch-dba/refarch-dba/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><strong>{`Updated 10/21/2020`}</strong>\n        {` - Work in progress`}</p>\n    </InlineNotification>\n    <h2>{`Introduction`}</h2>\n    <p>{`Decision management](`}\n      <a {...{\n        \"href\": \"https://www.ibm.com/automation/business-rules)%5B%5D\",\n        \"parentName\": \"p\"\n      }}>{`https://www.ibm.com/automation/business-rules)[]`}</a>\n      {` supports three main use cases:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Let users model, author and validate decisions in a low-code environment.`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Externalize decision logic from microservice code so it can be developed, managed and tested by business users, but still integrated as a service in a cloud native microservice based.`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Integrate with AI model for combining predictive scoring and business rules`}</li>\n\n    </ul>\n    <h2>{`Getting started`}</h2>\n    <h3>{`Installing on IBM Cloud Openshift cluster`}</h3>\n    <p>{`This section is a quick summary of the steps to be done to deploy version 2020.2.`}</p>\n    <h5>{`Pre-requisites`}</h5>\n    <p>{`Access to Opendhift cluster and get `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`oc`}</inlineCode>\n      {` CLI.`}</p>\n    <h5>{`Get access to the container images`}</h5>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Get your entitlement key at `}\n        <a {...{\n          \"href\": \"https://myibm.ibm.com/products-services/containerlibrary\",\n          \"parentName\": \"li\"\n        }}>{`https://myibm.ibm.com/products-services/containerlibrary`}</a></li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Create the image pull secret:`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-shell\",\n        \"parentName\": \"pre\"\n      }}>{` oc create secret docker-registry admin.registrykey --docker-username=cp --docker-password=<Generated-Key> --docker-server=cp.icr.io -n cp4auto\n`}</code></pre>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Check that you can access CP4A images:`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-shell\",\n            \"parentName\": \"pre\"\n          }}>{`docker login cp.icr.io -u cp -p <Generated-Key>\ndocker pull cp.icr.io/cp/cp4a/aae/dba-dbcompatibility-initcontainer:20.0.\n`}</code></pre>\n\n      </li>\n\n    </ul>\n    <h5>{`Install common services`}</h5>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Get scripts and config files archive:`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-shell\",\n            \"parentName\": \"pre\"\n          }}>{`wget https://github.com/icp4a/cert-kubernetes/archive/20.0.2.tar.gz\n`}</code></pre>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Expand archive: `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`tar xvf 20.0.2.tar.gz`}</inlineCode></p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Change to folder cert-kubernetes-20.0.2`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`If not already present on the cluster create the common-service OpenShift project`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-shell\",\n            \"parentName\": \"pre\"\n          }}>{`# verify project does not exist\noc new-project common-service\n`}</code></pre>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`In common-service project, run the scripts/deploy_CS3.4.sh script`}</p>\n\n      </li>\n\n    </ul>\n    <h5>{`Prepare the operator storage`}</h5>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Create cp4a project`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Edit descriptors/operator-shared-pvc.yaml and use ibmc-file-retain-gold-gid`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Create the PVC:`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-shell\",\n            \"parentName\": \"pre\"\n          }}>{`oc create -f descriptors/operator-shared-pvc.yaml\n`}</code></pre>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Copy the drivers:`}</p>\n\n      </li>\n\n    </ul>\n    <pre><code {...{\n        \"parentName\": \"pre\"\n      }}>{`oc cp scripts/jdbc cp4a/<operator-podname>:/opt/ansible/share -c ansible\n`}</code></pre>\n    <h5>{`Install the operator`}</h5>\n    <p>{`*Deploy operator:\n`}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`./scripts/deployOperator.sh -i cp.icr.io/cp/cp4a/icp4a-operator:20.0.2 -p admin.registrykey -n cp4a -a accept`}</inlineCode></p>\n    <h5>{`Deploy ODM`}</h5>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Apply the CR:   (note: this CR also includes a simple install of BAI)`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Update the network policies for ODM:`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"parentName\": \"pre\"\n      }}>{`oc get netpol\n`}</code></pre>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Edit the odm-dc-networkpolicy, odm-dr-network-policy, odm-ds-console-network-policy, odm-ds-runtime-network-policy to add a blanket egress policy, for example:`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-yaml\",\n        \"parentName\": \"pre\"\n      }}>{`  spec:\n  egress:\n  - {}\n  ingress:\n  - ports:\n    - port: <PORT>\n      protocol: TCP\n  podSelector:\n    matchLabels:\n      run: ppe-odm-decisioncenter\n  policyTypes:\n  - Egress\n  - Ingress\n`}</code></pre>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}